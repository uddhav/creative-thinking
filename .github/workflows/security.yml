name: Security

on:
  schedule:
    # Run every Monday at 9am UTC
    - cron: '0 9 * * 1'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # Job 1: CodeQL Analysis
  codeql:
    name: CodeQL Analysis
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript', 'typescript']
    steps:
      - name: 🛎️ Checkout repository
        uses: actions/checkout@v4

      - name: 🔧 Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: ${{ matrix.language }}
          queries: security-and-quality

      - name: 🔨 Autobuild
        uses: github/codeql-action/autobuild@v3

      - name: 🔍 Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3
        with:
          category: '/language:${{matrix.language}}'

  # Job 2: Dependency Scanning
  dependency-scan:
    name: Dependency Security Scan
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: 🏗️ Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'npm'

      - name: 📦 Install dependencies
        run: npm ci

      - name: 🔒 Run npm audit
        run: |
          npm audit --json > audit-report.json
          cat audit-report.json | jq '.vulnerabilities | to_entries | map(select(.value.severity == "critical" or .value.severity == "high")) | length' > high-vulns-count.txt
          HIGH_VULNS=$(cat high-vulns-count.txt)
          if [ "$HIGH_VULNS" -gt 0 ]; then
            echo "❌ Found $HIGH_VULNS high/critical vulnerabilities"
            npm audit
            exit 1
          else
            echo "✅ No high/critical vulnerabilities found"
          fi

      - name: 🔍 OWASP Dependency Check
        uses: dependency-check/Dependency-Check_Action@main
        with:
          project: 'creative-thinking'
          path: '.'
          format: 'ALL'
          args: >
            --enableRetired
            --enableExperimental

      - name: 📤 Upload OWASP results
        uses: actions/upload-artifact@v4
        with:
          name: owasp-dependency-check-results
          path: reports/
          retention-days: 30

  # Job 3: Container Scanning (if Dockerfile exists)
  container-scan:
    name: Container Security Scan
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule' # Only run on manual trigger
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4

      - name: 🔍 Check if Dockerfile exists
        id: dockerfile
        run: |
          if [ -f "Dockerfile" ]; then
            echo "exists=true" >> $GITHUB_OUTPUT
          else
            echo "exists=false" >> $GITHUB_OUTPUT
          fi

      - name: 🐳 Build Docker image
        if: steps.dockerfile.outputs.exists == 'true'
        run: docker build -t creative-thinking:scan .

      - name: 🔍 Run Trivy vulnerability scanner
        if: steps.dockerfile.outputs.exists == 'true'
        uses: aquasecurity/trivy-action@master
        with:
          image-ref: 'creative-thinking:scan'
          format: 'sarif'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL,HIGH'

      - name: 📤 Upload Trivy scan results
        if: steps.dockerfile.outputs.exists == 'true'
        uses: github/codeql-action/upload-sarif@v3
        with:
          sarif_file: 'trivy-results.sarif'

  # Job 4: Secret Scanning
  secret-scan:
    name: Secret Scanning
    runs-on: ubuntu-latest
    steps:
      - name: 🛎️ Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: 🔍 Scan for secrets with Trufflehog
        uses: trufflesecurity/trufflehog@main
        with:
          path: ./
          base: main
          extra_args: --debug --only-verified

      - name: 🔍 GitLeaks scan
        uses: gitleaks/gitleaks-action@v2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  # Job 5: Security Report
  security-report:
    name: Security Report
    runs-on: ubuntu-latest
    needs: [codeql, dependency-scan, secret-scan]
    if: always()
    steps:
      - name: 📊 Generate Security Summary
        run: |
          echo "# 🔒 Security Scan Summary" > security-report.md
          echo "" >> security-report.md
          echo "**Date**: $(date)" >> security-report.md
          echo "**Repository**: ${{ github.repository }}" >> security-report.md
          echo "" >> security-report.md
          echo "## Scan Results" >> security-report.md
          echo "" >> security-report.md
          echo "| Scan Type | Status |" >> security-report.md
          echo "|-----------|--------|" >> security-report.md
          echo "| CodeQL | ${{ needs.codeql.result }} |" >> security-report.md
          echo "| Dependencies | ${{ needs.dependency-scan.result }} |" >> security-report.md
          echo "| Secrets | ${{ needs.secret-scan.result }} |" >> security-report.md
          echo "" >> security-report.md

          if [ "${{ needs.codeql.result }}" != "success" ] || \
             [ "${{ needs.dependency-scan.result }}" != "success" ] || \
             [ "${{ needs.secret-scan.result }}" != "success" ]; then
            echo "⚠️ **Action Required**: One or more security scans failed. Please review the detailed logs above." >> security-report.md
          else
            echo "✅ **All security scans passed successfully!**" >> security-report.md
          fi

      - name: 📤 Upload security report
        uses: actions/upload-artifact@v4
        with:
          name: security-report
          path: security-report.md
          retention-days: 90
